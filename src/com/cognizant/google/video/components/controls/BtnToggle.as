package com.cognizant.google.video.components.controls {	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.MovieClip;	import flash.display.DisplayObject;	import flash.events.EventDispatcher;	import flash.display.SimpleButton;		/**	 * ...	 * 	 * @author ...	 * 	 * @created mm/dd/yyyy 00:00 AM	 */	public class BtnToggle extends EventDispatcher {				// NOTE: This should be the order of access modifiers per section.		// - PUBLIC		// - INTERNAL		// - PROTECTED		// - PRIVATE				// Please use these section dividers as the guide limit length of chars per line.		// ------------------------------- STATIC VARIABLES --------------------------------				// ----------------------------------- VARIABLES -----------------------------------		public var id:String;				private var _clip:MovieClip;		private var _isToggle:Boolean;		private var _enabled:Boolean;				// --------------=--------------- STATIC GETTERS/SETTERS ---------------------------				// --------------------------- OVERRIDEN GETTERS/SETTERS ---------------------------				// ------------------------------- GETTERS/SETTERS ---------------------------------				// ------------------------------- STATIC METHODS ----------------------------------				// -------------------------------- CONSTRUCTOR ------------------------------------				public function BtnToggle (clip:MovieClip) {			// constructor code						clip.buttonMode = true;			clip.mouseChildren = false;						clip.addEventListener(MouseEvent.CLICK, clickHandler);									_enabled = true;			_clip = clip;			toggle(false);		}						// ----------------------------- OVERRIDEN METHODS ---------------------------------				// ------------------------   OVERRIDEN EVENT HANDLERS -----------------------------				// ---------------------------------  METHODS --------------------------------------		public function toggle (isToggled:Boolean):void {			var frame:String = isToggled ? 'on' : 'off';						_clip.gotoAndStop(frame);			_isToggle = isToggled;		}				public function enable (value:Boolean):void {			_clip.mouseEnabled = value;						_enabled = value;		}				// ------------------------------ EVENT HANDLERS -----------------------------------				private function clickHandler (e:MouseEvent):void {			if (!_enabled) return;						_isToggle = !_isToggle;						toggle(_isToggle);						if (_isToggle) {				dispatchEvent(new Event('toggled'));			} else {				dispatchEvent(new Event('untoggled'));			}		}				public function destroy ():void {			_clip.removeEventListener(MouseEvent.CLICK, clickHandler);		}	}	}